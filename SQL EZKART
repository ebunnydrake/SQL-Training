-- COUNT OF ALL CUSTOMERS
SELECT COUNT (*) AS NUMBER_OF_ROWS FROM CUSTOMER_T;

-- DISTINCT COUNT OF CUSTOMERS
SELECT COUNT(DISTINCT CUSTOMER_ID) AS DISTINCT_COUNT_CUSTOMER FROM CUSTOMER_T;
-- NO DUPLICATES

--DISTINCT OCCUPATION
SELECT DISTINCT OCCUPATION FROM CUSTOMER_T;
-- BLUE COLLAR & BLUE-COLLAR NEED TO BE CLEANED

SELECT * FROM SALES_T;

-- SEE NUMBER OF ROWS
SELECT COUNT(*) AS NUMBER_OF_ROWS FROM SALES_T;

-- SEE NUMBER OF COLUMNS
SELECT COUNT(*) AS NUMBER_OF_COLUMNS
FROM pragma_table_info('SALES_T');

-- BOTH COLUMNS, CERTAIN THINGS NEED TO BE CLEANED AND CERTAIN THINGS NEED TO BE
SELECT
    c.CUSTOMER_ID,
    c.EMAIL_ID,
    c.FIRST_NAME,
    c.LAST_NAME,
    REPLACE(c.OCCUPATION, 'Blue Collar', 'Blue-Collar') AS OCCUPATION,
    (strftime('%Y', 'now') - strftime('%Y', c.DOB)) AS age,
    CASE 
        WHEN (strftime('%Y', 'now') - strftime('%Y', c.DOB)) <= 19 THEN '19 & below'
        WHEN (strftime('%Y', 'now') - strftime('%Y', c.DOB)) BETWEEN 20 AND 29 THEN '20-29'
        WHEN (strftime('%Y', 'now') - strftime('%Y', c.DOB)) BETWEEN 30 AND 39 THEN '30-39'
        WHEN (strftime('%Y', 'now') - strftime('%Y', c.DOB)) BETWEEN 40 AND 49 THEN '40-49'
        ELSE '50 and above'
    END AS AGE_CATEGORY,
    s.TOTAL_ORDERS,
    s.REVENUE,
    s.AVERAGE_ORDER_VALUE,
    s.CARRIAGE_REVENUE,
    s.AVERAGESHIPPING,
    s.FIRST_ORDER_DATE,
    s.LATEST_ORDER_DATE,
    s.AVGDAYSBETWEENORDERS,
    s.DAYSSINCELASTORDER,
    s.MONDAY_ORDERS,
    s.TUESDAY_ORDERS,
    s.WEDNESDAY_ORDERS,
    s.THURSDAY_ORDERS,
    s.FRIDAY_ORDERS,
    s.SATURDAY_ORDERS,
    s.SUNDAY_ORDERS,
    s.MONDAY_REVENUE,
    s.TUESDAY_REVENUE,
    s.WEDNESDAY_REVENUE,
    s.THURSDAY_REVENUE,
    s.FRIDAY_REVENUE,
    s.SATURDAY_REVENUE,
    s.SUNDAY_REVENUE,
    s.WEEK1_DAY01_DAY07_ORDERS,
    s.WEEK2_DAY08_DAY15_ORDERS,
    s.WEEK3_DAY16_DAY23_ORDERS,
    s.WEEK4_DAY24_DAY31_ORDERS,
    s.WEEK1_DAY01_DAY07_REVENUE,
    s.WEEK2_DAY08_DAY15_REVENUE,
    s.WEEK3_DAY16_DAY23_REVENUE,
    s.WEEK4_DAY24_DAY31_REVENUE,
    s.TIME_0000_0600_ORDERS,
    s.TIME_0601_1200_ORDERS,
    s.TIME_1200_1800_ORDERS,
    s.TIME_1801_2359_ORDERS,
    s.TIME_0000_0600_REVENUE,
    s.TIME_0601_1200_REVENUE,
    s.TIME_1200_1800_REVENUE,
    s.TIME_1801_2359_REVENUE
FROM
    CUSTOMER_T AS c
    LEFT JOIN SALES_T AS s 
    ON c.CUSTOMER_ID = s.CUSTOMER_ID;
